/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      dynamicMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dynamicFvMesh   dynamicRefineBalancedFvMesh;

multiCritRefinementControls
{
    enableMultiCritRefinementControl  true;

    fields // must be scalarFields
    (
    );

    interface // must be a scalarField (only one dictionary!)
    (
        alpha.air // refine interface (found based on snGrad of alpha > 0.1)
        {
            innerRefLayers 7; // describes how many cell layers inside phase alpha are to be refined
            outerRefLayers 7; // describes how many cell layers outside phase alpha are to be refined
            // optional settings:
            maxRefineLevel 2; // max refinement layers; Default: maxRefinement from dynamicRefineFvMeshCoeffs is used
            // to get slower than 2:1 refinement; add #nAddLayers between each refinement level at the interface
            nAddLayers 0; // default: nAddLayers=0
        }
    );


    gradients // must be scalars
    ();

    curls // must be vectors
    ();

    regions
    ();
}

dynamicRefineFvMeshCoeffs
{
    // Extra entries for balancing
    enableBalancing true;
    allowableImbalance 0.10;

    // How often to refine
    refineInterval  5;

    // Field to be refinement on (set it to 'internalRefinementField' to use the
    // refinementControls dictionary entries above)
    field           error;

    // Refine field inbetween lower..upper
    lowerRefineLevel 0.01;
    upperRefineLevel 1e6; // maxRefinement+0.5

    // If value < unrefineLevel unrefine
    unrefineLevel   0.01;

    // Have slower than 2:1 refinement
    nBufferLayers   4;

    // Refine cells only up to maxRefinement levels
    maxRefinement   5;

    // Stop refinement if maxCells reached
    maxCells        200000;

    // Flux field and corresponding velocity field. Fluxes on changed
    // faces get recalculated by interpolating the velocity. Use 'none'
    // on surfaceScalarFields that do not need to be reinterpolated.
    correctFluxes
    (
        (phi none)
        (rhoEPhi none)
        (rhoPhi none)
        (rhoUPhi none)
        (alphaRhoPhi.air none)
        (alphaRhoPhi.water none)
        (alphaPhi.air none)
    );

    mapSurfaceFields
    (
        Uf
        Uf_0
    );

    // Write the refinement level as a volScalarField
    dumpLevel       true;
}

// dynamicFvMesh   adaptiveFvMesh;
//
// // How often to refine
// refineInterval  1;
//
// // Field to be refinement on
// field           error;
errorEstimator  densityGradient;
//
// // Refine field in between lower..upper
// lowerRefineLevel 1e-2;
// upperRefineLevel 1e6;
//
// // If value < unrefineLevel unrefine
// unrefineLevel   1e-2;
//
// // Have slower than 2:1 refinement
// nBufferLayers   1;
//
// // Refine cells only up to maxRefinement levels
// maxRefinement   5;
//
// // Stop refinement if maxCells reached
// maxCells        100000000;
//
// // Flux field and corresponding velocity field. Fluxes on changed
// // faces get recalculated by interpolating the velocity. Use 'none'
// // on surfaceScalarFields that do not need to be reinterpolated.
// correctFluxes
// (
//     (phi none)
//     (own none)
//     (nei none)
//     (rhoPhi none)
//     (alphaPhi.air none)
//     (alphaPhi.water none)
//     (rhoPhi none)
//     (alphaRhoPhi.air none)
//     (alphaRhoPhi.water none)
//     (rhoEPhi none)
//     (rhoUPhi none)
// );
//
// // Write the refinement level as a volScalarField
// dumpLevel       true;
// ************************************************************************* //
