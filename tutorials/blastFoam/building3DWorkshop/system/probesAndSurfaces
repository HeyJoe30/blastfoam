    surfaces
    {
        type      surfaces;
        functionObjectLibs ( "libsampling.so" );
        writeControl   adjustableRunTime;
        writeInterval  1e-4;
        interpolate false;
        interpolationScheme cellPointFace;
        surfaceFormat  vtk;
        fields ( p );
        surfaces
        (
            ground
            {
                type        patch;
                patches     (ground);
                triangulate false;
            }

            pContours
            {
                type        isoSurface;
                isoField    p;
                isoValues   (1.1e5);
            }

            zNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    point   (0 0 0.5);
                    normal  (0 0 1);
                }
                interpolate     true;
            }

            yNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    point   (0 0 0.5);
                    normal  (0 1 0);
                }
                interpolate     true;
            }

            xNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    point   (0 0 0.5);
                    normal  (1 0 0);
                }
                interpolate     true;
            }

        );
    }







    pressureProbes
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        writeControl    timeStep;
        writeInterval   1;
        probeLocations
        (
			// probe locations in ( x y z ) format, unlimited number -- needs to be inside the domain!
			
			( 1.999 0.001 0.5)
			
			// etc.
        );
        fields
        (
            p
            impulse
        );
    }













